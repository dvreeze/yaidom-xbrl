<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2007 XBRL International. All Rights Reserved. -->

<link:linkbase
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:link="http://www.xbrl.org/2003/linkbase"
  xmlns:generic="http://xbrl.org/2008/generic"
  xmlns:formula="http://xbrl.org/2008/formula"
  xmlns:instance="http://xbrl.org/2010/variable/instance"
  xmlns:variable="http://xbrl.org/2008/variable"
  xmlns:cf="http://xbrl.org/2008/filter/concept"
  xmlns:gf="http://xbrl.org/2008/filter/general"
  xmlns:acf="http://xbrl.org/2010/filter/aspect-cover" 
  xmlns:va="http://xbrl.org/2008/assertion/value"
  xmlns:label="http://xbrl.org/2008/label"
  xmlns:xfi="http://www.xbrl.org/2008/function/instance" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:eg="http://xbrl.org/formula/conformance/example"

  xsi:schemaLocation="
  http://www.xbrl.org/2003/linkbase http://www.xbrl.org/2003/xbrl-linkbase-2003-12-31.xsd
  http://xbrl.org/2008/generic ../../../core_schemas/2008/generic-link.xsd
  http://xbrl.org/2008/formula ../../../core_schemas/2008/formula.xsd
  http://xbrl.org/2008/variable ../../../core_schemas/2008/variable.xsd
  http://xbrl.org/2008/assertion/value ../../../core_schemas/2008/value-assertion.xsd
  http://xbrl.org/2008/filter/concept ../../../core_schemas/2008/concept-filter.xsd
  http://xbrl.org/2008/filter/general ../../../core_schemas/2008/general-filter.xsd
  http://xbrl.org/2008/label ../../../core_schemas/2008/generic-label.xsd
  http://xbrl.org/2010/variable/instance ../../../core_schemas/2010/variable-instance.xsd
  http://xbrl.org/2010/filter/aspect-cover ../../../core_schemas/2008/aspect-cover-filter.xsd
  ">
  
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2008/element-label" xlink:href="../../../core_schemas/2008/generic-label.xsd#element-label" xlink:type="simple"/>
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2008/variable-set" xlink:href="../../../core_schemas/2008/variable.xsd#variable-set" xlink:type="simple"/>
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2008/variable-filter" xlink:href="../../../core_schemas/2008/variable.xsd#variable-filter" xlink:type="simple"/>
  <link:roleRef roleURI="http://www.xbrl.org/2008/role/link" xlink:href="../../../core_schemas/2008/generic-link.xsd#standard-link-role" xlink:type="simple"/>

  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/instance-variable" xlink:href="../../../core_schemas/2010/variable-instance.xsd#instance-variable" xlink:type="simple"/>
  <link:arcroleRef arcroleURI="http://xbrl.org/arcrole/2010/formula-instance" xlink:href="../../../core_schemas/2010/variable-instance.xsd#formula-instance" xlink:type="simple"/>

  <generic:link xlink:type="extended"
    xlink:role="http://www.xbrl.org/2008/role/link">

    <!-- (1) formula to produce eg:y result fact items where x > 10 -->
    <formula:formula xlink:type="resource" xlink:label="formulaY" 
      value="$y" 
      source="y"
      aspectModel="dimensional" implicitFiltering="true">
      <formula:decimals>0</formula:decimals>
    </formula:formula>

    <!-- chaining instance, to be used for chaining output of eg:y's to input of assertion -->
    <instance:instance name="instance:temp-y-instance" xlink:type="resource" 
      xlink:label="temp-y-instance" />

    <!-- formulaE's result (1) (test:e) is made visible to assertion (3) variable $ySeq -->
    <generic:arc xlink:type="arc" 
      xlink:arcrole="http://xbrl.org/arcrole/2010/formula-instance" 
      xlink:from="formulaY" xlink:to="temp-y-instance" order="1.0"/>
    <generic:arc xlink:type="arc" 
      xlink:arcrole="http://xbrl.org/arcrole/2010/instance-variable" 
      xlink:from="temp-y-instance" xlink:to="variable_ySeq" order="1.0"/>

    <!-- (2) formula to produce eg:z from fact items where x lt 10 -->
    <formula:formula xlink:type="resource" xlink:label="formulaZ" 
      value="$z" 
      source="z"
      aspectModel="dimensional" implicitFiltering="true">
      <formula:decimals>0</formula:decimals>
    </formula:formula>

    <!-- chaining instance, to be used for chaining output of eg:y's to input of assertion -->
    <instance:instance name="instance:temp-z-instance" xlink:type="resource" 
      xlink:label="temp-z-instance" />

    <!-- formulaZ's result (2) (eg:z) is made visible to assertion (3) variable $zSeq -->
    <generic:arc xlink:type="arc" 
      xlink:arcrole="http://xbrl.org/arcrole/2010/formula-instance" 
      xlink:from="formulaZ" xlink:to="temp-z-instance" order="1.0"/>
    <generic:arc xlink:type="arc" 
      xlink:arcrole="http://xbrl.org/arcrole/2010/instance-variable" 
      xlink:from="temp-z-instance" xlink:to="variable_zSeq" order="1.0"/>

    <!-- (3) formula produces a single test:a = $b + $c + $e from (2) & (1) -->
    <!-- formula 1 produces a = b + c -->
    <va:valueAssertion xlink:type="resource" xlink:label="assertion" 
        id="assertion"
        aspectModel="dimensional" implicitFiltering="true"
        test="sum($ySeq) eq sum($zSeq)"/>



    <!--  Fact variables.  -->
    <variable:factVariable xlink:type="resource" xlink:label="variable_xy"   bindAsSequence="false" />
    <variable:factVariable xlink:type="resource" xlink:label="variable_xz"   bindAsSequence="false" />
    <variable:factVariable xlink:type="resource" xlink:label="variable_y"   bindAsSequence="false" />
    <variable:factVariable xlink:type="resource" xlink:label="variable_z"   bindAsSequence="false" />
    <variable:factVariable xlink:type="resource" xlink:label="variable_ySeq"   bindAsSequence="true" />
    <variable:factVariable xlink:type="resource" xlink:label="variable_zSeq"   bindAsSequence="true" />


    <!--  Concept filters for the fact variables -->
    <cf:conceptName xlink:type="resource" xlink:label="filter_xy">
      <cf:concept>
        <cf:qname>eg:x</cf:qname>
      </cf:concept>
    </cf:conceptName> 
    <!-- general filter for X gt 10 for Y's -->
    <gf:general xlink:type="resource" xlink:label="filter_xy"
     test=". gt 10" />

    <cf:conceptName xlink:type="resource" xlink:label="filter_xz">
      <cf:concept>
        <cf:qname>eg:x</cf:qname>
      </cf:concept>
    </cf:conceptName> 
    <!-- general filter for X lt 10 for Z's -->
    <gf:general xlink:type="resource" xlink:label="filter_xz"
     test=". lt 10" />

    <cf:conceptName xlink:type="resource" xlink:label="filter_y">
      <cf:concept>
        <cf:qname>eg:y</cf:qname>
      </cf:concept>
    </cf:conceptName> 

    <cf:conceptName xlink:type="resource" xlink:label="filter_z">
      <cf:concept>
        <cf:qname>eg:z</cf:qname>
      </cf:concept>
    </cf:conceptName> 

    <!-- aspect cover filter covers everything -->
    <acf:aspectCover xlink:type="resource" xlink:label="filter_coverAll">
      <acf:aspect>all</acf:aspect>
    </acf:aspectCover>

    <!--  Arc from formulaY to the variables it depends on -->
    <variable:variableArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set" 
      xlink:from="formulaY" xlink:to="variable_xy" order="1.0"
      name="x" />
    <variable:variableArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set" 
      xlink:from="formulaY" xlink:to="variable_y" order="1.0"
      name="y" />

    <!--  Arc from formulaZ to the variables it depends on -->
    <variable:variableArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set" 
      xlink:from="formulaZ" xlink:to="variable_xz" order="1.0"
      name="x" />
    <variable:variableArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set" 
      xlink:from="formulaZ" xlink:to="variable_z" order="1.0"
      name="z" />

    <!--  Arc from assertion to the variables it depends on -->
    <variable:variableArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set" 
      xlink:from="assertion" xlink:to="variable_ySeq" order="1.0"
      name="ySeq" />
    <variable:variableArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-set" 
      xlink:from="assertion" xlink:to="variable_zSeq" order="1.0"
      name="zSeq" />

    <!--  Arcs from variables to their concept filters -->
    <variable:variableFilterArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter" 
      complement="false" cover="true"
      xlink:from="variable_xy" xlink:to="filter_xy" order="1.0"/>
    <variable:variableFilterArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter" 
      complement="false" cover="true"
      xlink:from="variable_xz" xlink:to="filter_xz" order="1.0"/>
    <variable:variableFilterArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter" 
      complement="false" cover="true"
      xlink:from="variable_y" xlink:to="filter_y" order="1.0"/>
    <variable:variableFilterArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter" 
      complement="false" cover="true"
      xlink:from="variable_z" xlink:to="filter_z" order="1.0"/>
    <variable:variableFilterArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter" 
      complement="false" cover="true"
      xlink:from="variable_ySeq" xlink:to="filter_coverAll" order="1.0"/>
    <variable:variableFilterArc xlink:type="arc" xlink:arcrole="http://xbrl.org/arcrole/2008/variable-filter" 
      complement="false" cover="true"
      xlink:from="variable_zSeq" xlink:to="filter_coverAll" order="1.0"/>
  </generic:link>

</link:linkbase>
