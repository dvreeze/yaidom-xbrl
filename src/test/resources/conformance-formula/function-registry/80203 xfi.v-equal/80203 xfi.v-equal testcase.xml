<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2008 XBRL International. All Rights Reserved. -->
<?xml-stylesheet type="text/xsl" href="../stylesheets/conformanceFunction.xsl"?>
<testcase
  xmlns="http://xbrl.org/2008/conformance"
  xmlns:reg="http://xbrl.org/2008/registry"
  xmlns:fcn="http://xbrl.org/2008/function"
  xmlns:cfcn="http://xbrl.org/2008/conformance/function"
  xmlns:xbrli="http://www.xbrl.org/2003/instance"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:xfi="http://www.xbrl.org/2008/function/instance"
  xmlns:xfie="http://www.xbrl.org/2008/function/instance/error"
  xmlns:xqt-err="http://www.w3.org/2005/xqt-errors"
  xmlns:concept="http://xbrl.org/formula/conformance/example" 
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xsi:schemaLocation="
  http://xbrl.org/2008/registry ../schemas/registry.xsd
  http://xbrl.org/2008/function ../schemas/function.xsd
  http://xbrl.org/2008/conformance ../schemas/conformance.xsd
  http://xbrl.org/2008/conformance/function ../schemas/conformanceFunction.xsd
  ">
  <owners>
    <reg:owner id="herm">
      <reg:name>Herm Fischer</reg:name>
      <reg:affiliation>UBMatrix / Mark V Systems</reg:affiliation>
      <reg:email>fischer@markv.com</reg:email>
     <reg:assumedOwnership moment="2008-02-19T00:00:00" />
    </reg:owner>
  </owners>

  <number>80203</number>

  <name>Function test xfi:v-equal</name>

  <documentation>
    <xhtml:p>
      Tests of function xfi:v-equal($left as node()*, $right as node()*) as xs:boolean
      </xhtml:p>
  </documentation>

  <reference xlink:type="simple" xlink:href="http://www.xbrl.org/Specification/XF-PWD-2006-12-07.htm#_Toc152670705"/>

  <variation id="V-01">
    <name>Returns v-equality of numeric items equal within precision and units</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V01" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V01">
         xfi:v-equal( //concept:a[@id eq 't1'],
                      //concept:a[@id eq 't2'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-01a">
    <name>Returns v-equality of numeric items equal within precision and units (operands reversed from v-01)</name>
    <documentation>
      <xhtml:p>
      Tests that either left or right operand can be the &quot;less precise&quot; side.
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V01a" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V01a">
         xfi:v-equal( //concept:a[@id eq 't2'],
                      //concept:a[@id eq 't1'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-02">
    <name>Same as V-01 but numeric items not v-equal</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V02" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V02">
         xfi:v-equal( //concept:a[@id eq 't1'],
                      //concept:a[@id eq 't3'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-03">
    <name>Same as V-01 but arguments are sequences</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V03" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V03">
         xfi:v-equal( ( //concept:a[@id eq 't1'], //concept:a[@id eq 't4']),
                      ( //concept:a[@id eq 't2'], //concept:a[@id eq 't5']) )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-04">
    <name>Same as V-01 but arguments are sequences not same length</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V04" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V04">
         xfi:v-equal( ( //concept:a[@id eq 't1'], //concept:a[@id eq 't4']),
                      ( //concept:a[@id eq 't2'] ) )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-05">
    <name>Not a node argument to function</name>
    <documentation>
      <xhtml:p>
        XPath-defined error for node type incorrect.
      </xhtml:p>
    </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V05" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V05">
         xfi:v-equal( /xbrli:xbrl/concept:b[@id eq 't14'], 'foo' )
      </cfcn:call>
    </inputs>
    <outputs>
      <error>xqt-err:XPTY0004</error>
    </outputs>
  </variation>  

  <variation id="V-06">
    <name>A sequence of concepts as argument</name>
    <documentation>
      <xhtml:p>
        XPath-defined error for node type incorrect arity of arguments.
      </xhtml:p>
    </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V06" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V06">
         xfi:v-equal( //concept:a[starts-with(@id,'t')] )
      </cfcn:call>
    </inputs>
    <outputs>
      <error>xqt-err:XPST0017</error>
    </outputs>
  </variation>

  <variation id="V-07">
    <name>Wrong node to function</name>
    <documentation>
      <xhtml:p>
        Functions spec error for non-item node type.
      </xhtml:p>
    </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V07" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V07">
         xfi:v-equal( /xbrli:xbrl/concept:a[@id eq 't1'], 
                      /xbrli:xbrl/concept:t[@id eq 't17'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <error>xfie:NodeIsNotXbrlItem</error>
    </outputs>
  </variation>  

  <variation id="V-08">
    <name>Returns v-equality of non-numeric items, unequal trim whitespace</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V08" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V08">
         xfi:v-equal( //concept:b[@id eq 't14'],
                      //concept:b[@id eq 't15'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

<!-- commented out pending bugzilla bug 325

  <variation id="V-09">
    <name>Returns v-equality of equal text numeric and non-numeric items, passes because string representations and contexts are equal</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V09" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V09">
         xfi:v-equal( //concept:a[@id eq 't1'],
                      //concept:b[@id eq 't16'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

-->

  <variation id="V-10">
    <name>Returns v-equality of numerically equal but lexically different numeric and string items.  Highlights a v-equality ambiguity.</name>
    <documentation>
      <xhtml:p>
        Bugzilla entry 325 relates to this.
        New-age DOMs (post-xdt) are not required to store string representations of object values, so a float may be converted to string in unrounded form, as shown here. 
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V10" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V10">
         xfi:v-equal( //concept:f[@id eq 't18'],
                      //concept:b[@id eq 't19'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-11">
    <name>Returns v-equality of numerically equal but lexically different numeric and string items.  String is locale-formatted here.  Highlights a v-equality ambiguity.</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V11" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V11">
         xfi:v-equal( //concept:f[@id eq 't18'],
                      //concept:b[@id eq 't20'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-12">
    <name>Returns v-equality of numerically equal but lexically different numeric and string items.  String is locale-formatted here.  Highlights a v-equality ambiguity.</name>
    <documentation>
      <xhtml:p>
        Bugzilla entry 325 relates to this.
        New-age DOMs (post-xdt) are not required to store string representations of object values, so a float may be converted to string in unrounded form, as shown here. 
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V12" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V12">
         xfi:v-equal( //concept:f[@id eq 't18'],
                      //concept:b[@id eq 't21'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-20">
    <name>Returns v-equality of dateUnion deemed to be an instant date (such as a restated-on date).  Highlights a v-equality shortcomming.  Only compared lexically but if compared as instant date would be false anyway.  A "post-modern" DOM (based on xdt) may find these two values equal if strings are recovered from binary dateTime objects, or raise XPTY0004 error if using XPath "=" or "eq" to compare incompatible date union member objects.</name>
    <documentation>
      <xhtml:p>
        Bugzilla entry 325 relates to this.
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V20" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V20">
         xfi:v-equal( //concept:d[@id eq 'd01'],
                      //concept:d[@id eq 'd02'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-21">
    <name>Returns v-equality of dateUnion deemed to be an instant date (such as a restated-on date).  Highlights a v-equality shortcomming.  Only compared lexically but if compared as instant date would be true.</name>
    <documentation>
      <xhtml:p>
        Bugzilla entry 325 relates to this.
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V21" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V21">
         xfi:v-equal( //concept:d[@id eq 'd01'],
                      //concept:d[@id eq 'd03'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-22">
    <name>Returns v-equality of dateUnion deemed to be an instant date (such as a restated-on date).  Highlights a v-equality shortcomming.  Only compared lexically but if compared as instant date would be true.</name>
    <documentation>
      <xhtml:p>
        Bugzilla entry 325 relates to this.
      </xhtml:p>
    </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="value-test-concepts.xsd"/>
      <instance readMeFirst="true" id="V22" xlink:type="simple" xlink:href="value-test-instance.xml"/>
      <cfcn:call file="V22">
         xfi:v-equal( //concept:d[@id eq 'd01'],
                      //concept:d[@id eq 'd04'] )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and 
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>


  <revisions>
    <reg:revision on="2008-02-19T00:00:00" by="herm">
      <xhtml:p>
        Created the test case.
      </xhtml:p>
    </reg:revision>
    <reg:revision on="2008-04-16T10:00:00" by="herm">
      <xhtml:p>
        Enhanced description of V-09.
        Added variations for numeric to non-numeric but numerically equal.
        Added variations for dateTimeItemType (date union) items.
        Added references to bugzilla entry 325 (regarding v-equals in spec).
      </xhtml:p>
    </reg:revision>
    <reg:revision on="2010-02-05T17:00:00" by="herm">
      <xhtml:p>
        Vixed V-01 to have no whitespace around entity identifiers, as noted by IHR in e-mail 2010-02-05.
      </xhtml:p>
    </reg:revision>
  </revisions>

</testcase>
