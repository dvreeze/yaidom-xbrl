<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2008 XBRL International. All Rights Reserved. -->
<?xml-stylesheet type="text/xsl" href="../stylesheets/conformanceFunction.xsl"?>
<testcase
  xmlns="http://xbrl.org/2008/conformance"
  xmlns:reg="http://xbrl.org/2008/registry"
  xmlns:fcn="http://xbrl.org/2008/function"
  xmlns:cfcn="http://xbrl.org/2008/conformance/function"
  xmlns:xbrli="http://www.xbrl.org/2003/instance"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:xfi="http://www.xbrl.org/2008/function/instance"
  xmlns:xfie="http://www.xbrl.org/2008/function/instance/error"
  xmlns:xqt-err="http://www.w3.org/2005/xqt-errors"
  xmlns:t="http://xbrl.org/formula/conformance/example" 
  xmlns:eg="http://xbrl.org/xdt/dimension-equality-test" 
  xmlns:link="http://www.xbrl.org/2003/linkbase"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xsi:schemaLocation="
  http://xbrl.org/2008/registry ../schemas/registry.xsd
  http://xbrl.org/2008/function ../schemas/function.xsd
  http://xbrl.org/2008/conformance ../schemas/conformance.xsd
  http://xbrl.org/2008/conformance/function ../schemas/conformanceFunction.xsd
  ">
  <owners>
    <reg:owner id="herm">
      <reg:name>Herm Fischer</reg:name>
      <reg:affiliation>UBMatrix / Mark V Systems</reg:affiliation>
      <reg:email>fischer@markv.com</reg:email>
     <reg:assumedOwnership moment="2008-10-30T10:30:00" />
    </reg:owner>
    <reg:owner id="peter">
      <reg:name>Peter Cowan</reg:name>
      <reg:affiliation>CoreFiling</reg:affiliation>
      <reg:email>prc@corefiling.com</reg:email>
     <reg:assumedOwnership moment="2013-06-14T18:00:00" />
    </reg:owner>
    <reg:owner id="hitoshi">
      <reg:name>Hitoshi Okumura</reg:name>
      <reg:affiliation>Fujitsu</reg:affiliation>
      <reg:email>okmr@jp.fujitsu.com</reg:email>
     <reg:assumedOwnership moment="2013-07-18T11:00:00" />
    </reg:owner>
    <reg:owner id="muramoto">
      <reg:name>Takahide Muramoto</reg:name>
      <reg:affiliation>Fujitsu</reg:affiliation>
      <reg:email>taka.muramoto@jp.fujitsu.com</reg:email>
     <reg:assumedOwnership moment="2013-07-26T10:00:00" />
    </reg:owner>
  </owners>

  <number>80219</number>

  <name>xfi:nodes-correspond</name>

  <documentation>
    <xhtml:p>
    </xhtml:p>    
  </documentation>

  <reference
    xlink:type="simple"
    xlink:href="90403 xfi.nodes-correspond function.xml">
    function definition
  </reference>

  <variation id="V-01">
    <name>Nodes correspond, they have equal but lexically different numeric attributes and elements</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V01" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V01">
        xfi:nodes-correspond(
          //t:dimVal[@id='d1'],
          //t:dimVal[@id='d2'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-02">
    <name>Nodes don't correspond, due to element nodes reordering in right argument</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V02" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V02">
        xfi:nodes-correspond(
          //t:dimVal[@id='d1'],
          //t:dimVal[@id='d3'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-03">
    <name>Nodes correspond, they have equal but lexically different QName elements</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V03" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V03">
        xfi:nodes-correspond(
          //t:dimVal[@id='d4'],
          //t:dimVal[@id='d5'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-04">
    <name>Nodes don't correspond, due to different qname values</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V04" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V04">
        xfi:nodes-correspond(
          //t:dimVal[@id='d4'],
          //t:dimVal[@id='d6'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-05">
    <name>Nodes correspond, they have date union elements that correspond in xs type for the same element positions</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>

    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V05" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V05">
        xfi:nodes-correspond(
          //t:dimVal[@id='d7'],
          //t:dimVal[@id='d8'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-06">
    <name>Nodes don't correspond, due to different dateunion atomic values, but element xs types do correspond in same element positions</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V06" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V06">
        xfi:nodes-correspond(
          //t:dimVal[@id='d7'],
          //t:dimVal[@id='d9'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-07">
    <name>Nodes correspond, each node is an nmtokens attribute with same sequence of tokens</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V07" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V07">
        xfi:nodes-correspond(
          //t:dimVal[@id='d10']/@nmtokens,
          //t:dimVal[@id='d11']/@nmtokens)
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-08">
    <name>Nodes don't correspond, each is an nmtokens attribute but the sequence entires order differs</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V08" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V08">
        xfi:nodes-correspond(
          //t:dimVal[@id='d10']/@nmtokens,
          //t:dimVal[@id='d12']/@nmtokens)
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-09">
    <name>Nodes correspond, text nodes with comments</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V09" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V09">
        xfi:nodes-correspond(
          //t:P1[@id='t1'],
          //t:P1[@id='t2'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-10">
    <name>Nodes don't correspond, elements with mixed content have different child elements</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V10" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V10">
        xfi:nodes-correspond(
          //t:mixVal[@id='mix1'],
          //t:mixVal[@id='mix2'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-11">
    <name>Nodes don't correspond, elements with mixed content atomize to different values</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V11" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V11">
        xfi:nodes-correspond(
          //t:mixVal[@id='mix3'],
          //t:mixVal[@id='mix4'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-12">
    <name>Nodes correspond, atomize to same values and child elements correspond</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V12" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V12">
        xfi:nodes-correspond(
          //t:mixVal[@id='mix5'],
          //t:mixVal[@id='mix6'])
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq true()
      </cfcn:test>
    </outputs>
  </variation>
  
  <variation id="V-13">
    <name>Nodes don't correspond, elements with differing non-id attributes that don't correspond</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="nodes-correspond.xsd"/>
      <linkbase xlink:type="simple" xlink:href="nodes-correspond-definition.xml"/>
      <instance readMeFirst="true" id="V13" xlink:type="simple" xlink:href="nodes-correspond-instance1.xml"/>
      <cfcn:call file="V13">
        xfi:nodes-correspond(
          //t:dimVal[@id='d13']/t:dimVal,
          //t:dimVal[@id='d14']/t:dimVal)
      </cfcn:call>
    </inputs>

    <outputs>
      <cfcn:test>
         $result instance of xs:boolean and
         count( $result ) eq 1 and
         $result eq false()
      </cfcn:test>
    </outputs>
  </variation>



  <revisions>
    <reg:revision on="2008-10-30T10:30:00" by="herm">
      <xhtml:p>
        Created
      </xhtml:p>
    </reg:revision>
    <reg:revision on="2013-06-14T18:00:00" by="peter">
      <xhtml:p>
        Added variations V-09 to V-12 to clarify the behaviour for elements with mixed content and embedded comments.
      </xhtml:p>
    </reg:revision>
    <reg:revision on="2013-07-18T11:00:00" by="hitoshi">
      <xhtml:p>
        Replaced variations V-10 to V-12 with non-footnote examples since the xlink:label attributes in each test did not correspond.
      </xhtml:p>
    </reg:revision>
    <reg:revision on="2013-07-18T12:00:00" by="peter">
      <xhtml:p>
        Added variation V13 to clarify that elements with differing non-id attributes don't correspond.
      </xhtml:p>
    </reg:revision>
    <reg:revision on="2013-07-26T10:00:00" by="muramoto">
      <xhtml:p>
        Changed function call and input instance of V-13 to obtain the unique result regardless of input instance.
      </xhtml:p>
    </reg:revision>
  </revisions>
</testcase>








