<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2008 XBRL International. All Rights Reserved. -->
<?xml-stylesheet type="text/xsl" href="../stylesheets/conformanceFunction.xsl"?>
<testcase
  xmlns="http://xbrl.org/2008/conformance"
  xmlns:reg="http://xbrl.org/2008/registry"
  xmlns:fcn="http://xbrl.org/2008/function"
  xmlns:cfcn="http://xbrl.org/2008/conformance/function"
  xmlns:xbrli="http://www.xbrl.org/2003/instance"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns:xfi="http://www.xbrl.org/2008/function/instance"
  xmlns:xfie="http://www.xbrl.org/2008/function/instance/error"
  xmlns:xqt-err="http://www.w3.org/2005/xqt-errors"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:t="http://xbrl.org/formula/conformance/example" 
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
  http://xbrl.org/2008/registry ../schemas/registry.xsd
  http://xbrl.org/2008/function ../schemas/function.xsd
  http://xbrl.org/2008/conformance ../schemas/conformance.xsd
  http://xbrl.org/2008/conformance/function ../schemas/conformanceFunction.xsd
  ">

  <owners>
    <reg:owner id="wojciech">
       <reg:name>Wojciech Diakowski</reg:name>
       <reg:affiliation>Fingo</reg:affiliation>
       <reg:email>wojtekd@fingo.pl</reg:email>
       <reg:assumedOwnership moment="2012-06-07T00:00:00" />
    </reg:owner>
  </owners>

  <number>90311</number>

  <name>xfi:fact-explicit-dimensions</name>

  <documentation>
  </documentation>

  <reference
    xlink:type="simple"
    xlink:href="90311 xfi.fact-explicit-dimensions function.xml">
    function definition  
  </reference>
  
  
  <variation id="V-01">
    <name>Test correct location dimension for Mount Kilimanjaro</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="fact-explicit-dimension-value.xsd"/>
      <linkbase xlink:type="simple" xlink:href="fact-explicit-dimension-value-definition.xml"/>
      <instance readMeFirst="true" id="V01" xlink:type="simple" xlink:href="fact-explicit-dimension-value-instance1.xml"/>
      <cfcn:call file="V01">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:Peak[./text() eq 'Mount Kilimanjaro']
          )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:QName* and
         count( $result ) eq 1 and
         $result eq QName('http://xbrl.org/formula/conformance/example','t:Location')
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-02">
    <name>Test default location dimension for Vinson Massif</name>
    <documentation>
      <xhtml:p>
         Mt Vinson uses the Antarctica default dimension, so although it is not physically reported in the context, it is virtually reported due to the default for the dimension.
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="fact-explicit-dimension-value.xsd"/>
      <linkbase xlink:type="simple" xlink:href="fact-explicit-dimension-value-definition.xml"/>
      <instance readMeFirst="true" id="V02" xlink:type="simple" xlink:href="fact-explicit-dimension-value-instance1.xml"/>
      <cfcn:call file="V02">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:Peak[./text() eq 'Vinson Massif'] 
          )
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:QName* and
         count( $result ) eq 1 and
         $result eq QName('http://xbrl.org/formula/conformance/example','t:Location')
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-03">
   <name>Dimension can be located in either segment or scenario, for this variation appears in the segment.</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="bi-locational-dim-concepts.xsd"/>
      <linkbase xlink:type="simple" xlink:href="bi-locational-dim-definition.xml"/>
      <instance readMeFirst="true" id="V03" xlink:type="simple" xlink:href="bi-locational-seg-explicit-instance.xml"/>
      <cfcn:call file="V03">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:PriItem1[1]) 
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:QName* and
         count( $result ) eq 1 and
         $result eq QName('http://xbrl.org/formula/conformance/example','t:ExplDim1')
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-04">
   <name>Dimension can be located in either segment or scenario but for this variation appears in the scenario instead of segment.</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="bi-locational-dim-concepts.xsd"/>
      <linkbase xlink:type="simple" xlink:href="bi-locational-dim-definition.xml"/>
      <instance readMeFirst="true" id="V04" xlink:type="simple" xlink:href="bi-locational-scen-explicit-instance.xml"/>
      <cfcn:call file="V04">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:PriItem1[1]) 
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:QName* and
         count( $result ) eq 1 and
         $result eq QName('http://xbrl.org/formula/conformance/example','t:ExplDim1')
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-05">
   <name>Test multiple dimensions for fact.</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="multipleDims-concepts.xsd"/>
      <linkbase xlink:type="simple" xlink:href="multipleDims-definition.xml"/>
      <instance readMeFirst="true" id="V05" xlink:type="simple" xlink:href="multipleDims-instance.xml"/>
      <cfcn:call file="V05">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:PriItem1[1]) 
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:QName*
         and
         count( $result ) eq 3
         and
         index-of( $result, QName('http://xbrl.org/formula/conformance/example','eg:ExplDim1') ) ge 1
         and 
         index-of( $result, QName('http://xbrl.org/formula/conformance/example','eg:ExplDim2') ) ge 1
         and 
         index-of( $result, QName('http://xbrl.org/formula/conformance/example','eg:ExplDim3') ) ge 1
      </cfcn:test>
    </outputs>
  </variation>

  <variation id="V-06">
   <name>Test multiple dimensions for fact with default dimension.</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="multipleDims-concepts.xsd"/>
      <linkbase xlink:type="simple" xlink:href="multipleDims-definition.xml"/>
      <instance readMeFirst="true" id="V06" xlink:type="simple" xlink:href="multipleDims-instance.xml"/>
      <cfcn:call file="V06">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:PriItem1[2]) 
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         $result instance of xs:QName*
         and
         count( $result ) eq 3
         and
         index-of( $result, QName('http://xbrl.org/formula/conformance/example','eg:ExplDim1') ) ge 1
         and 
         index-of( $result, QName('http://xbrl.org/formula/conformance/example','eg:ExplDim2') ) ge 1
         and 
         index-of( $result, QName('http://xbrl.org/formula/conformance/example','eg:ExplDim3') ) ge 1
      </cfcn:test>
    </outputs>
  </variation>
  
  <variation id="V-07">
   <name>Test no dimensions for fact.</name>
    <documentation>
      <xhtml:p>
      </xhtml:p>
     </documentation>
      
    <inputs>
      <schema xlink:type="simple" xlink:href="simple-concepts.xsd"/>
      <instance readMeFirst="true" id="V07" xlink:type="simple" xlink:href="simple-instance.xml"/>
      <cfcn:call file="V07">
        xfi:fact-explicit-dimensions(
          /xbrli:xbrl/t:c1[2]) 
      </cfcn:call>
    </inputs>
    <outputs>
      <cfcn:test>
         empty( $result )
      </cfcn:test>
    </outputs>
  </variation>
  
    <variation id="V-08">
    <name>Wrong node to function</name>
    <documentation>
      <xhtml:p>
        XPath-defined error for node type incorrect.
      </xhtml:p>
     </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="simple-concepts.xsd"/>
      <instance readMeFirst="true" id="V08" xlink:type="simple" xlink:href="simple-instance.xml"/>
      <cfcn:call file="V08">
         xfi:fact-explicit-dimensions( /xbrli:xbrl )
      </cfcn:call>
    </inputs>
    <outputs>
      <error>xqt-err:XPTY0004</error>
    </outputs>
  </variation>

  <variation id="V-09">
    <name>A sequence of items as argument</name>
    <documentation>
      <xhtml:p>
        XPath-defined error for node type incorrect arity of arguments.
      </xhtml:p>
     </documentation>
    <inputs>
      <schema xlink:type="simple" xlink:href="simple-concepts.xsd"/>
      <instance readMeFirst="true" id="V09" xlink:type="simple" xlink:href="simple-instance.xml"/>
      <cfcn:call file="V09">
         xfi:fact-explicit-dimensions( /xbrli:xbrl/t:c1 )
      </cfcn:call>
    </inputs>
    <outputs>
      <error>xqt-err:XPTY0004</error>
    </outputs>
  </variation>

  <revisions>
    <reg:revision on="2012-06-07T00:00:00" by="wojciech">
      <xhtml:p>
        Created the test case.
      </xhtml:p>
    </reg:revision>
  </revisions>

</testcase>
